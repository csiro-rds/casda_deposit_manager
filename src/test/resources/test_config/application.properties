###############################################################################
#
# TEST application.properties file.
#
# This file will *only* be included in unit tests if the test has been 
# configured to load it.  This is usually done by configuring a test case to 
# use a custom context configuration.  Typically, this is done as follows:
#
# @RunWith(SpringJUnit4ClassRunner.class)
# @ContextConfiguration(classes = { MyTest.Config.class })
# public class MyTest
# {
# ...
#     @PropertySource("classpath:/application.properties")
#     @PropertySource("classpath:/config/application.properties")
#     @PropertySource("/classpath:/test_config/application.properties")
#     @ComponentScan(
#       <some component scan config that will get your classes loaded>
#     )
#     public static class Config
#     {
#        /**
#         * Required to configure the PropertySource(s) (see https://jira.spring.io/browse/SPR-8539)
#         * @return a PropertySourcesPlaceholderConfigurer
#         */
#         @Bean
#         public static PropertySourcesPlaceholderConfigurer propertySourcesPlaceholderConfigurer() {
#            return new PropertySourcesPlaceholderConfigurer();
#         }
#     }
# ...
# }
#
# but the Config class can be pretty much anywhere (indeed, including it at a package level will ensure that it
# auto-wires classes at that package level or below.
#
###############################################################################

spring.datasource.url: jdbc:h2:mem:testdb;INIT=CREATE SCHEMA IF NOT EXISTS casda;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driverClassName: org.h2.Driver
spring.jpa.hibernate.ddl-auto: create-drop
spring.jpa.show-sql: false
spring.jpa.database-platform=au.csiro.casda.H2SphericalDialect


